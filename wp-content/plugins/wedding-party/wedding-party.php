<?php/* Plugin Name: Wedding Party Plugin URI: http://manifestdevelopment.com Description: This plugin creates a custom post type & template tags . Author: Joe Casabona Version: 1.0 Author URI: http://manifestdevelopment.com/*/require_once 'wedding-party-template-tags.php';add_action( 'init', 'wedding_party_register' );function wedding_party_register() {  //Arguments to create post type.  $args = array(    'label' => __( 'Wedding Party' ),    'singular_label' => __( 'Member' ),    'public' => true,    'show_ui' => true,    'capability_type' => 'post',    'hierarchical' => false,    'has_archive' => true,    'menu_icon' => 'dashicons-groups',    'supports' => array( 'title', 'editor', 'thumbnail', 'page-attributes', ),    'rewrite' => array( 'slug' => 'wedding-party', 'with_front' => false ),  );  //Register type and custom taxonomy for type.  register_post_type( 'wedding-party' , $args );  add_image_size( 'wedding-party-photo', 250, 250, true );}add_action( "admin_init", "wedding_party_meta" );function wedding_party_meta () { add_meta_box( 'wedding-party-meta', 'Member Information', 'wedding_party_options', 'wedding-party', 'normal', 'high' );}function wedding_party_options() { global $post; $members_fields = array(        'role',        'relationship',        'party_side' => array(              'type' => 'radio',              'values' => array( 'Bride', 'Groom', ),            ),      ); if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {   return $post_id; } $output = '<style type="text/css">                .members_info div {                  margin: 15px 0;                }                .members-info label {                  display: inline-block;                  width: 150px;                  margin: 10px 20px;                }                .members-info label.radio-label {                  margin-right: 5px;                  width: auto;                }            </style>'; $member_info= get_post_custom( $post->ID );  $output .='<div class="members-info">';  foreach ( $members_fields as $field => $field_info ) {    $output .= '<div>';    if ( is_array( $field_info ) ) {      $field_val = &$member_info[ $field ][0];      foreach ( $field_info['values'] as $val ) {        $checked = ( strtolower( $val ) == $field_val ) ? 'checked' : '';        $format = '<label class="radio-label" for="%1$s">%2$s</label> <input id="%1$s" type="%3$s" name="%4$s" value="%1$s" %5$s />';        $output .= sprintf( $format,                      esc_attr( strtolower( $val ) ),                      esc_attr( $val ),                      esc_attr( $field_info['type'] ),                      esc_attr( $field ),                      esc_attr( $checked )                  );      }    } else {      $field_val = &$member_info[ $field_info ][0];      $format = '<label>%1$s</label><input type="text" name="%2$s" value="%3$s" />';      $output .= sprintf( $format,          esc_attr( ucfirst( $field_info ) ),          esc_attr( $field_info ),          esc_attr( $field_val )      );    }    $output .= '</div>'; } $output .= '</div>'; echo $output;}add_action('save_post', 'wedding_party_save_extras');function wedding_party_save_extras() {  global $post;  $members_fields = array( 'role', 'relationship', 'party_side' );  if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE ){   //if you remove the line above this the sky will fall on your head.   return $post_id;  } else {    foreach ( $members_fields as $field ) {      if ( isset( $_POST[ $field ] ) ) {        update_post_meta( $post->ID, $field, $_POST[ $field ] );      }    }  }}function wedding_party_pre_get_posts( $query ) {	if( $query->is_main_query() ) {		if ( ( 'wedding-party' == $query->get('post_type') ) && ! is_admin() ) {      $query->set( 'posts_per_page', -1 );      $query->set( 'meta_key', 'party_side' );			$query->set( 'orderby', array( 'menu_order' => 'DESC', 'meta_value' => 'ASC', 'title' => 'ASC' ) );      $query->set( 'meta_query', array (   				array (  					'key' => 'role',  				 ),   				array (  					'key' => 'party_side',  				),  			)      );    }  }  return;}add_action( 'pre_get_posts', 'wedding_party_pre_get_posts' );?>
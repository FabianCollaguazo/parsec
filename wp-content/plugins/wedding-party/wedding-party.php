<?php/* Plugin Name: Wedding Party Plugin URI: http://manifestdevelopment.com Description: This plugin creates a custom post type & template tags . Author: Joe Casabona Version: 1.0 Author URI: http://manifestdevelopment.com/*/require_once 'wedding-party-template-tags.php';add_action( 'init', 'wedding_party_register' );function wedding_party_register() {  //Arguments to create post type.  $args = array(    'label' => __( 'Wedding Party' ),    'singular_label' => __( 'Member' ),    'public' => true,    'show_ui' => true,    'capability_type' => 'post',    'hierarchical' => false,    'has_archive' => true,    'menu_icon' => 'dashicons-groups',    'supports' => array( 'title', 'editor', 'thumbnail', ),    'rewrite' => array( 'slug' => 'wedding-party', 'with_front' => false ),  );  //Register type and custom taxonomy for type.  register_post_type( 'wedding-party' , $args );  add_image_size( 'wedding-party-photo', 250 );}add_action( "admin_init", "wedding_party_meta" );function wedding_party_meta () { add_meta_box( 'wedding-party-meta', 'Member Information', 'wedding_party_options', 'wedding-party', 'normal', 'high' );}function wedding_party_options() { global $post; $members_fields = array( 'role', 'relationship' ); if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {   return $post_id; } $output = '<style type="text/css">                .members_info div {                  margin: 15px 0;                }                .members_info label {                  display: inline-block;                  width: 150px;                  margin: 10px 20px;                }            </style>'; $member_info= get_post_custom( $post->ID );  $output .='<div class="members_info">';  $format = '<label>%1$s</label><input type="text" name="%2$s" value="%3$s" />';  foreach ( $members_fields as $field ) {    $field_val = $member_info[ $field ][0];    $output .= '<div>';    $output .= sprintf( $format,        esc_attr( ucfirst( $field ) ),        esc_attr( $field ),        esc_attr( $field_val )    );    $output .= '</div>'; } $output .= '</div>'; echo $output;}add_action('save_post', 'wedding_party_save_extras');function wedding_party_save_extras() {  global $post;  $members_fields = array( 'role', 'relationship' );  if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE ){   //if you remove the line above this the sky will fall on your head.   return $post_id;  } else {    foreach ( $members_fields as $field ) {     update_post_meta( $post->ID, $field, $_POST[ $field ] );    }  }}?>